{"version":3,"sources":["apis/index.js","actions/index.js","sagas/user.js","sagas/issue.js","sagas/index.js","reducers/user.js","reducers/issue.js","reducers/pullRequest.js","reducers/modal.js","reducers/index.js","styles/variable.js","components/atoms/Button.js","components/atoms/TextField.js","components/organisms/IssueItem.js","components/atoms/TextArea.js","components/atoms/LabelButton.js","components/templates/NewIssue.js","components/templates/EditIssue.js","components/templates/Issue.js","containers/Issue.js","components/templates/PullRequest.js","components/organisms/TabHeader.js","pages/Index.js","pages/Profile.js","containers/Profile.js","pages/Issue.js","pages/PullRequest.js","components/organisms/DropDown.js","components/organisms/Header.js","components/organisms/Modal.js","containers/Modal.js","styles/index.js","App.js","index.js"],"names":["username","process","REACT_APP_GITHUB_USERNAME","accessToken","REACT_APP_GITHUB_ACCESS_TOKEN","repo","REACT_APP_GITHUB_REPO","console","log","client","axios","create","baseURL","timeout","auth","password","fetchUser","a","get","res","data","error","fetchIssueList","owner","params","createIssue","post","updateIssue","issueNumber","actionCreators","addIssue","type","payload","issue","removeIssue","showModal","component","removeModal","hideModal","userFetchRequested","userSaga","call","api","user","put","message","takeLatest","issueSaga","getUser","state","success","toast","position","POSITION","TOP_CENTER","className","autoClose","hideProgressBar","action","select","name","issues","reduce","acc","item","id","camelcaseKeys","deep","rootSaga","all","initialState","email","profileUrl","reducer","initialData","1","title","status","description","createBy","2","3","index","Object","keys","length","newData","show","stack","slice","combineReducers","pullRequest","ui","modal","colors","Button","styled","map","default","primary","danger","ButtonComponent","onClick","children","React","createElement","borderStyle","Container","div","TextField","input","TextFieldComponent","value","placeholder","onChange","onChangeText","_onChange","useCallback","e","target","statusLabel","0","tr","IssueItem","checked","onCheck","createdAt","updatedAt","_onClick","_onCheck","stopPropagation","key","dayjs","format","TextArea","textarea","TextAreaComponent","LabelButton","Title","h2","Form","Field","Label","label","MessageContainer","ErrorMessage","p","Footer","NewIssue","onSubmit","onClose","useState","validationError","setValidationError","setTitle","setDescription","_onSubmit","now","Date","EditIssue","setStatus","onChangeStatus","Content","Header","Heading","SearchForm","Action","Table","table","Issue","searchWord","setSearchWord","list","useMemo","values","filter","includes","setChecked","allChecked","onCheckAll","newIds","onNew","onEdit","onRemove","forEach","defaultChecked","colSpan","connect","dispatch","bindActionCreators","PullRequest","Tabs","ul","Tab","li","active","TabHeader","tabs","selected","to","Index","setSelected","h1","Left","Right","Group","Profile","src","alt","Menu","DropDown","isOpenMenu","setIsOpenMenu","menuRef","useRef","useEffect","current","focus","icon","faBars","onBlur","setTimeout","ref","tabIndex","device","mobile","Logo","Links","Modal","setAppElement","ModalContainer","isOpen","size","GlobalStyle","createGlobalStyle","App","basename","path","exact","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","saga","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d018fdb5.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst username = process.env.REACT_APP_GITHUB_USERNAME;\nconst accessToken = process.env.REACT_APP_GITHUB_ACCESS_TOKEN;\nconst repo = process.env.REACT_APP_GITHUB_REPO;\nconsole.log('username', username);\nconsole.log('repo', repo);\n\nconst client = axios.create({\n  baseURL: 'https://api.github.com',\n  timeout: 1000,\n  auth: {\n    username,\n    password: accessToken,\n  },\n});\n\nexport const fetchUser = async () => {\n  try {\n    const res = await client.get('/user');\n    return res.data;\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nexport const fetchIssueList = async ({ owner, params }) => {\n  try {\n    const res = await client.get(`/repos/${owner}/${repo}/issues`, {\n      params,\n    });\n    return res.data;\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nexport const createIssue = async ({ owner, data }) => {\n  const res = await client.post(`/repos/${owner}/${repo}/issues`, data);\n  return res.data;\n};\n\nexport const updateIssue = async ({ owner, issueNumber, data }) => {\n  const res = await client.post(\n    `/repos/${owner}/${repo}/issues/${issueNumber}`,\n    data\n  );\n  return res.data;\n};\n","// action type //\n\n// issue\nexport const ISSUE_ADD = 'ISSUE_ADD';\nexport const ISSUE_REMOVE = 'ISSUE_REMOVE';\nexport const ISSUE_UPDATE = 'ISSUE_UPDATE';\nexport const ISSUE_FETCH_REQUESTED = 'ISSUE_FETCH_REQUESTED';\nexport const ISSUE_FETCH_SUCCEEDED = 'ISSUE_FETCH_SUCCEEDED';\nexport const ISSUE_FETCH_FAILED = 'ISSUE_FETCH_FAILED';\nexport const ISSUE_CREATE_REQUESTED = 'ISSUE_CREATE_REQUESTED';\nexport const ISSUE_CREATE_SUCCEEDED = 'ISSUE_CREATE_SUCCEEDED';\nexport const ISSUE_CREATE_FAILED = 'ISSUE_CREATE_FAILED';\nexport const ISSUE_UPDATE_REQUESTED = 'ISSUE_UPDATE_REQUESTED';\nexport const ISSUE_UPDATE_SUCCEEDED = 'ISSUE_UPDATE_SUCCEEDED';\nexport const ISSUE_UPDATE_FAILED = 'ISSUE_UPDATE_FAILED';\n\n// modal\nexport const MODAL_PUSH = 'MODAL_PUSH';\nexport const MODAL_POP = 'MODAL_POP';\nexport const MODAL_HIDE = 'MODAL_HIDE';\n\n// user\nexport const USER_FETCH_REQUESTED = 'USER_FETCH_REQUESTED';\nexport const USER_FETCH_SUCCEEDED = 'USER_FETCH_SUCCEEDED';\nexport const USER_FETCH_FAILED = 'USER_FETCH_FAILED';\n\n// action creators //\n\n// issue\nconst addIssue = ({ issue }) => {\n  return {\n    type: ISSUE_ADD,\n    payload: { issue },\n  };\n};\n\nconst removeIssue = ({ issue }) => {\n  return {\n    type: ISSUE_REMOVE,\n    payload: { issue },\n  };\n};\n\nconst updateIssue = ({ issue }) => {\n  return {\n    type: ISSUE_UPDATE,\n    payload: { issue },\n  };\n};\n\n// modal\nconst showModal = ({ component }) => {\n  return {\n    type: MODAL_PUSH,\n    payload: { component },\n  };\n};\n\nconst removeModal = () => {\n  return {\n    type: MODAL_POP,\n    payload: {},\n  };\n};\n\nconst hideModal = () => {\n  return {\n    type: MODAL_HIDE,\n    payload: {},\n  };\n};\n\n// user\nconst userFetchRequested = () => {\n  return {\n    type: USER_FETCH_REQUESTED,\n  };\n};\n\nexport const actionCreators = {\n  addIssue,\n  removeIssue,\n  updateIssue,\n  showModal,\n  removeModal,\n  hideModal,\n  userFetchRequested,\n};\n","import { call, put, takeLatest } from 'redux-saga/effects';\nimport * as api from '../apis';\nimport * as ActionType from '../actions';\n\nfunction* fetchUser() {\n  try {\n    const data = yield call(api.fetchUser);\n    const user = data;\n    yield put({\n      type: ActionType.USER_FETCH_SUCCEEDED,\n      payload: { user },\n    });\n  } catch (e) {\n    yield put({\n      type: ActionType.USER_FETCH_FAILED,\n      payload: { message: 'ユーザの取得に失敗しました' },\n    });\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest(ActionType.USER_FETCH_REQUESTED, fetchUser);\n}\n\nexport default userSaga;\n","import { select, call, put, takeLatest } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\nimport camelcaseKeys from 'camelcase-keys';\nimport * as api from '../apis';\nimport * as ActionType from '../actions';\n\nconst getUser = (state) => state.user.data;\n\nconst success = (message) =>\n  toast(message, {\n    position: toast.POSITION.TOP_CENTER,\n    className: 'toast-success',\n    autoClose: false,\n    hideProgressBar: true,\n  });\nconst error = (message) =>\n  toast(message, {\n    position: toast.POSITION.TOP_CENTER,\n    className: 'toast-error',\n    autoClose: false,\n    hideProgressBar: true,\n  });\n\nfunction* fetchIssueList(action) {\n  try {\n    const user = yield select(getUser);\n    const data = yield call(api.fetchIssueList, { owner: user.name });\n    const issues = data.reduce((acc, item) => {\n      return { ...acc, [item.id]: camelcaseKeys(item, { deep: true }) };\n    }, {});\n    yield put({ type: ActionType.ISSUE_FETCH_SUCCEEDED, payload: { issues } });\n  } catch (e) {\n    console.error(e);\n    error('一覧の取得に失敗しました');\n    yield put({\n      type: ActionType.ISSUE_FETCH_FAILED,\n      payload: { message: 'issue一覧の取得に失敗しました' },\n    });\n  }\n}\n\nfunction* createIssue(action) {\n  try {\n    const user = yield select(getUser);\n    yield call(api.createIssue, { data: action.payload, owner: user.name });\n    yield put({ type: ActionType.ISSUE_CREATE_SUCCEEDED });\n    yield put({ type: ActionType.ISSUE_FETCH_REQUESTED });\n    success('issueを作成しました');\n  } catch (e) {\n    console.error(e);\n    error('作成に失敗しました');\n    yield put({\n      type: ActionType.ISSUE_CREATE_FAILED,\n      payload: { message: 'issueの作成に失敗しました' },\n    });\n  }\n}\n\nfunction* updateIssue(action) {\n  try {\n    const user = yield select(getUser);\n    const { issue, issueNumber } = action.payload;\n    yield call(api.updateIssue, {\n      data: issue,\n      issueNumber: issueNumber,\n      owner: user.name,\n    });\n    yield put({ type: ActionType.ISSUE_UPDATE_SUCCEEDED });\n    yield put({ type: ActionType.ISSUE_FETCH_REQUESTED });\n    success('issueを更新しました');\n  } catch (e) {\n    console.error(e);\n    error('更新に失敗しました');\n    yield put({\n      type: ActionType.ISSUE_UPDATE_FAILED,\n      payload: { message: 'issueの更新に失敗しました' },\n    });\n  }\n}\n\nfunction* issueSaga() {\n  yield takeLatest(ActionType.ISSUE_FETCH_REQUESTED, fetchIssueList);\n  yield takeLatest(ActionType.ISSUE_CREATE_REQUESTED, createIssue);\n  yield takeLatest(ActionType.ISSUE_UPDATE_REQUESTED, updateIssue);\n}\n\nexport default issueSaga;\n","import { all } from 'redux-saga/effects';\nimport userSaga from './user';\nimport issueSaga from './issue';\n\nfunction* rootSaga() {\n  yield all([userSaga(), issueSaga()]);\n}\n\nexport default rootSaga;\n","const initialState = {\n  name: 'tune',\n  email: 'hisatsune01@gmail.com',\n  profileUrl: '',\n};\n\nconst reducer = (state = initialState, action) => {\n  return state;\n};\n\nexport default reducer;\n","import { ISSUE_ADD, ISSUE_REMOVE, ISSUE_UPDATE } from '../actions';\n\nconst initialData = {\n  1: {\n    id: 1,\n    title: 'bug-issue',\n    status: 0,\n    description: 'バグ報告をするときに使う。→ 修正したらクローズする',\n    createBy: 'tune',\n  },\n  2: {\n    id: 2,\n    title: 'enhancement-issue',\n    status: 0,\n    description:\n      '機能追加の要望や改善してほしいときに使う。→ 実装したらクローズする',\n    createBy: 'tune',\n  },\n  3: {\n    id: 3,\n    title: 'question-issue',\n    status: 0,\n    description: '質問したいときに使う。→ 質問・議論の答えがでたらクローズする',\n    createBy: 'tune',\n  },\n};\n\nconst initialState = {\n  index: Object.keys(initialData).length,\n  data: initialData,\n};\n\nconst reducer = (state = initialState, action) => {\n  const { index, data } = state;\n  const { issue } = action.payload || {};\n  const newData = { ...state.data };\n  const id = index + 1;\n  switch (action.type) {\n    case ISSUE_ADD:\n      newData[id] = { ...issue, id };\n      return { ...state, index: id, data: newData };\n    case ISSUE_UPDATE:\n      return { ...state, data: { ...data, [issue.id]: issue } };\n    case ISSUE_REMOVE:\n      delete newData[issue.id];\n      return { ...state, data: newData };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","const initialState = {\n  data: {},\n};\n\nconst reducer = (state = initialState, action) => {\n  return state;\n};\n\nexport default reducer;\n","import { MODAL_HIDE, MODAL_PUSH, MODAL_POP } from '../actions';\n\nconst initialState = {\n  show: false,\n  stack: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case MODAL_HIDE:\n      return { ...state, show: false };\n    case MODAL_PUSH:\n      return {\n        ...state,\n        stack: [...state.stack, action.payload.component],\n        show: true,\n      };\n    case MODAL_POP:\n      return { ...state, stack: state.stack.slice(0, -1), show: false };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport issue from './issue';\nimport pullRequest from './pullRequest';\nimport modal from './modal';\n\nconst reducer = combineReducers({\n  user,\n  issue,\n  pullRequest,\n  ui: combineReducers({ modal }),\n});\n\nexport default reducer;\n","export const colors = {\n  black: '#333',\n  white: 'white',\n  weakBlack: '#586069',\n  border: '#e1e4e8',\n  primary: '#42c360',\n  danger: '#d73a49',\n  link: '#0366d6',\n  hoverRow: '#c6dae640',\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { colors } from '../../styles/variable';\n\nconst Button = styled.a`\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  text-align: center;\n  padding: 4px 16px;\n  margin: 4px;\n  min-width: 80px;\n  border-radius: 6px;\n  color: white;\n  font-size: 0.9rem;\n`;\n\nconst ButtonPrimary = styled(Button)`\n  background: ${colors.primary};\n  border-bottom: 2px solid #28a745;\n  &:hover {\n    background: #28a745;\n    border-bottom: 2px solid #208437;\n  }\n  &:active {\n    border-bottom: 0;\n  }\n`;\n\nconst ButtonDanger = styled(Button)`\n  background: ${colors.danger};\n  border-bottom: 2px solid #af1c2a;\n  &:hover {\n    background: #af1c2a;\n    border-bottom: 2px solid #671019;\n  }\n  &:active {\n    border-bottom: 0;\n  }\n`;\n\nconst map = {\n  default: Button,\n  primary: ButtonPrimary,\n  danger: ButtonDanger,\n};\n\nconst ButtonComponent = ({ type, onClick, children }) => {\n  const component = map[type] || map.default;\n  return React.createElement(component, { onClick }, children);\n};\n\nButtonComponent.propTypes = {\n  type: PropTypes.string,\n  onClick: PropTypes.func,\n  children: PropTypes.elementType,\n};\n\nexport default ButtonComponent;\n","import React, { useCallback } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { colors } from '../../styles/variable';\n\nconst borderStyle = `1px solid ${colors.border}`;\n\nconst Container = styled.div`\n  border-radius: 6px;\n  border: ${borderStyle};\n`;\nconst TextField = styled.input`\n  padding: 8px;\n  border: none;\n  outline: none;\n  background: none;\n  font-size: 1rem;\n  width: 100%;\n`;\nconst TextFieldComponent = ({ value, placeholder, onChange, onChangeText }) => {\n  const _onChange = useCallback(\n    (e) => {\n      if (onChange) {\n        onChange(e);\n      }\n\n      if (onChangeText) {\n        onChangeText(e.target.value);\n      }\n    },\n    [onChange, onChangeText]\n  );\n\n  return (\n    <Container className='text-field-container'>\n      <TextField\n        type='input'\n        value={value}\n        placeholder={placeholder}\n        onChange={_onChange}\n      />\n    </Container>\n  );\n};\n\nTextFieldComponent.propTypes = {\n  value: PropTypes.string,\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func,\n  onChangeText: PropTypes.func,\n};\n\nexport default TextFieldComponent;\n","import React, { useCallback } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport dayjs from 'dayjs';\nimport { colors } from '../../styles/variable';\n\nconst statusLabel = {\n  0: 'Open',\n  1: 'Close',\n};\n\nconst Container = styled.tr`\n  cursor: pointer;\n  &:hover {\n    background: ${colors.hoverRow};\n  }\n`;\n\nconst IssueItem = ({ checked, onClick, onCheck, issue }) => {\n  const { id, title, status, createBy, createdAt, updatedAt } = issue;\n  const _onClick = useCallback(\n    (e) => {\n      onClick(issue);\n    },\n    [issue, onClick]\n  );\n  const _onCheck = useCallback(\n    (e) => {\n      e.stopPropagation();\n      onCheck(issue);\n    },\n    [issue, onCheck]\n  );\n  return (\n    <Container key={id} onClick={_onClick}>\n      <td>\n        <input type='checkbox' checked={checked} onClick={_onCheck} />\n      </td>\n      <td className='outline'>{title}</td>\n      <td>{statusLabel[status]}</td>\n      <td>{createBy}</td>\n      <td>{dayjs(createdAt).format('MM-DD-YYYY')}</td>\n      <td>{dayjs(updatedAt).format('MM-DD-YYYY')}</td>\n    </Container>\n  );\n};\n\nIssueItem.propTypes = {\n  checked: PropTypes.bool,\n  onCheck: PropTypes.func,\n  onClick: PropTypes.func,\n  issue: PropTypes.object,\n};\n\nexport default IssueItem;\n","import React, { useCallback } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { colors } from '../../styles/variable';\n\nconst borderStyle = `1px solid ${colors.border}`;\n\nconst Container = styled.div`\n  border-radius: 6px;\n  border: ${borderStyle};\n`;\n\nconst TextArea = styled.textarea`\n  padding: 8px;\n  border: none;\n  outline: none;\n  background: none;\n  font-size: 1rem;\n  width: 100%;\n`;\n\nconst TextAreaComponent = ({ value, placeholder, onChange, onChangeText }) => {\n  const _onChange = useCallback(\n    (e) => {\n      if (onChange) {\n        onChange(e);\n      }\n\n      if (onChangeText) {\n        onChangeText(e.target.value);\n      }\n    },\n    [onChange, onChangeText]\n  );\n  return (\n    <Container>\n      <TextArea value={value} placeholder={placeholder} onChange={_onChange} />\n    </Container>\n  );\n};\n\nTextAreaComponent.propTypes = {\n  value: PropTypes.string,\n  placeholder: PropTypes.string,\n  onChange: PropTypes.func,\n  onChangeText: PropTypes.func,\n};\n\nexport default TextAreaComponent;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Button = styled.a`\n  cursor: pointer;\n  display: block;\n  width: 100%;\n  text-align: center;\n  padding: 4px 16px;\n  margin: 4px;\n  min-width: 100px;\n  border-radius: 6px;\n  font-size: 1rem;\n`;\n\nconst LabelButton = ({ onClick, children }) => {\n  return <Button onClick={onClick}>{children}</Button>;\n};\n\nLabelButton.propTypes = {\n  onClick: PropTypes.func,\n  children: PropTypes.elementType,\n};\n\nexport default LabelButton;\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport TextField from '../atoms/TextField';\nimport TextArea from '../atoms/TextArea';\nimport Button from '../atoms/Button';\nimport LabelButton from '../atoms/LabelButton';\nimport { colors } from '../../styles/variable';\n\nconst Container = styled.div`\n  max-width: 598px;\n  margin: auto;\n  a {\n    width: auto;\n  }\n  textarea {\n    min-height: 150px;\n  }\n`;\n\nconst Title = styled.h2`\n  padding: 0 8px;\n`;\n\nconst Form = styled.div`\n  padding: 32px 0;\n  padding-bottom: 16px;\n`;\nconst Field = styled.div`\n  padding: 16px;\n`;\nconst Label = styled.label`\n  display: block;\n  padding: 8px 0;\n`;\n\nconst MessageContainer = styled.div`\n  padding: 16px;\n  min-height: 100px;\n`;\n\nconst ErrorMessage = styled.p`\n  color: ${colors.danger};\n  background: #d73a4959;\n  padding: 8px;\n  border-radius: 6px;\n`;\n\nconst Footer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  padding: 8px;\n`;\n\nconst NewIssue = ({ user, onSubmit, onClose }) => {\n  const [validationError, setValidationError] = useState('');\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n  const _onSubmit = useCallback(() => {\n    if (!title) {\n      setValidationError('タイトルを入力してください');\n      return;\n    }\n\n    if (!description) {\n      setValidationError('説明を入力してください');\n      return;\n    }\n\n    const now = new Date();\n    onSubmit({\n      issue: {\n        title,\n        description,\n        createBy: user.name,\n        status: 0,\n        createdAt: now,\n        updatedAt: now,\n      },\n    });\n  }, [user, title, description, onSubmit, setValidationError]);\n\n  return (\n    <Container>\n      <Title>Issueを追加</Title>\n      <Form>\n        <Field>\n          <Label>タイトル</Label>\n          <TextField\n            value={title}\n            placeholder='タイトルを入力してください'\n            onChangeText={setTitle}\n          />\n        </Field>\n        <Field>\n          <Label>説明</Label>\n          <TextArea\n            value={description}\n            placeholder='説明を入力してください'\n            onChangeText={setDescription}\n          />\n        </Field>\n      </Form>\n      <MessageContainer>\n        {validationError && <ErrorMessage>{validationError}</ErrorMessage>}\n      </MessageContainer>\n      <Footer>\n        <Button type='primary' onClick={_onSubmit}>\n          作成\n        </Button>\n        <LabelButton onClick={onClose}>閉じる</LabelButton>\n      </Footer>\n    </Container>\n  );\n};\n\nNewIssue.propTypes = {\n  user: PropTypes.object,\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n};\n\nexport default NewIssue;\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport TextField from '../atoms/TextField';\nimport TextArea from '../atoms/TextArea';\nimport Button from '../atoms/Button';\nimport LabelButton from '../atoms/LabelButton';\nimport { colors } from '../../styles/variable';\n\nconst Container = styled.div`\n  max-width: 500px;\n  margin: auto;\n  a {\n    width: auto;\n  }\n  textarea {\n    min-height: 150px;\n  }\n`;\n\nconst Title = styled.h2`\n  padding: 0 8px;\n`;\n\nconst Form = styled.div`\n  padding: 32px 0;\n  padding-bottom: 16px;\n`;\nconst Field = styled.div`\n  padding: 16px;\n`;\nconst Label = styled.label`\n  display: block;\n  padding: 8px 0;\n`;\n\nconst MessageContainer = styled.div``;\n\nconst ErrorMessage = styled.p`\n  color: ${colors.danger};\n  background: #d73a4959;\n  padding: 8px;\n  border-radius: 6px;\n`;\n\nconst Footer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  padding: 8px;\n`;\n\nconst EditIssue = ({ issue, onSubmit, onClose }) => {\n  const [validationError, setValidationError] = useState('');\n  const [title, setTitle] = useState(issue.title);\n  const [status, setStatus] = useState(issue.status);\n  const [description, setDescription] = useState(issue.description);\n\n  const onChangeStatus = useCallback(\n    (e) => {\n      setStatus(e.target.value);\n    },\n    [setStatus]\n  );\n\n  const _onSubmit = useCallback(() => {\n    if (!title) {\n      setValidationError('タイトルを入力してください');\n      return;\n    }\n\n    if (!description) {\n      setValidationError('説明を入力してください');\n      return;\n    }\n\n    const now = new Date();\n    onSubmit({\n      issue: {\n        ...issue,\n        title,\n        description,\n        status,\n        updatedAt: now,\n      },\n    });\n    onClose();\n  }, [\n    issue,\n    title,\n    status,\n    description,\n    onSubmit,\n    onClose,\n    setValidationError,\n  ]);\n\n  return (\n    <Container>\n      <Title>Issueを追加</Title>\n      <Form>\n        <Field>\n          <Label>タイトル</Label>\n          <TextField\n            value={title}\n            placeholder='タイトルを入力してください'\n            onChangeText={setTitle}\n          />\n        </Field>\n        <Field>\n          <Label>説明</Label>\n          <TextArea\n            value={description}\n            placeholder='説明を入力してください'\n            onChangeText={setDescription}\n          />\n        </Field>\n        <Field>\n          <Label>ステータス</Label>\n          <select value={status} onChange={onChangeStatus}>\n            <option value='0'>Open</option>\n            <option value='1'>Close</option>\n          </select>\n        </Field>\n      </Form>\n      <MessageContainer>\n        {validationError && <ErrorMessage>{validationError}</ErrorMessage>}\n      </MessageContainer>\n      <Footer>\n        <Button type='primary' onClick={_onSubmit}>\n          更新\n        </Button>\n        <LabelButton onClick={onClose}>閉じる</LabelButton>\n      </Footer>\n    </Container>\n  );\n};\n\nEditIssue.propTypes = {\n  issue: PropTypes.object,\n  onSubmit: PropTypes.func,\n  onClose: PropTypes.func,\n};\n\nexport default EditIssue;\n","import React, { useCallback, useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { colors } from '../../styles/variable';\nimport Button from '../atoms/Button';\nimport TextField from '../atoms/TextField';\nimport IssueItem from '../organisms/IssueItem';\nimport NewIssue from './NewIssue';\nimport EditIssue from './EditIssue';\n\nconst borderStyle = `1px solid ${colors.border}`;\n\nconst Container = styled.div`\n  margin-top: 30px;\n  font-size: 14px;\n`;\n\nconst Content = styled.div`\n  overflow: scroll;\n`;\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst Heading = styled.div``;\nconst SearchForm = styled.div`\n  padding: 8px 16px;\n  display: flex;\n  width: 100%;\n  .text-field-container {\n    width: 100%;\n  }\n`;\n\nconst Action = styled.div`\n  display: flex;\n`;\n\nconst Table = styled.table`\n  border: ${borderStyle};\n  border-radius: 6px;\n  .outline {\n    width: 120rem;\n  }\n  th,\n  td {\n    padding: 5px 0;\n    text-align: left;\n    min-width: 10rem;\n    border-bottom: ${borderStyle};\n    input {\n      margin: 0 5px;\n    }\n  }\n  th:first-child,\n  td:first-child {\n    min-width: auto;\n  }\n  .no-divider {\n    border-bottom: 0;\n  }\n`;\n\nconst Issue = ({\n  data,\n  user,\n  showModal,\n  addIssue,\n  removeIssue,\n  updateIssue,\n  removeModal,\n}) => {\n  const [searchWord, setSearchWord] = useState('');\n  const list = useMemo(() => {\n    const values = Object.values(data);\n    if (!searchWord) {\n      return values;\n    }\n    return values.filter((value) => value.title.includes(searchWord));\n  }, [data, searchWord]);\n  const [checked, setChecked] = useState({});\n  const allChecked = useMemo(\n    () =>\n      Object.keys(data).length &&\n      Object.keys(checked).length === Object.keys(data).length,\n    [data, checked]\n  );\n  const onCheckAll = useCallback(() => {\n    if (allChecked) {\n      setChecked({});\n      return;\n    }\n    setChecked(data);\n  }, [allChecked, data]);\n\n  const onCheck = useCallback(\n    ({ id }) => {\n      const newIds = { ...checked };\n      if (checked[id]) {\n        delete newIds[id];\n      } else {\n        newIds[id] = data[id];\n      }\n      setChecked(newIds);\n    },\n    [data, checked]\n  );\n\n  const onNew = useCallback(() => {\n    const onAdd = (payload) => {\n      addIssue(payload);\n      removeModal();\n    };\n    showModal({\n      component: (\n        <NewIssue user={user} onSubmit={onAdd} onClose={removeModal} />\n      ),\n    });\n  }, [user, showModal, removeModal, addIssue]);\n\n  const onEdit = useCallback(\n    (issue) => {\n      showModal({\n        component: (\n          <EditIssue\n            issue={issue}\n            onSubmit={updateIssue}\n            onClose={removeModal}\n          />\n        ),\n      });\n    },\n    [showModal, removeModal, updateIssue]\n  );\n\n  const onRemove = useCallback(() => {\n    Object.values(checked).forEach((issue) => {\n      removeIssue({ issue });\n    });\n  }, [checked, removeIssue]);\n\n  return (\n    <Container>\n      <Header>\n        <Heading>\n          <h2>Issue</h2>\n        </Heading>\n        <SearchForm>\n          <TextField\n            value={searchWord}\n            placeholder='issue名で検索'\n            onChangeText={setSearchWord}\n          />\n        </SearchForm>\n        <Action>\n          <Button type='primary' onClick={onNew}>\n            New\n          </Button>\n          <Button type='danger' onClick={onRemove}>\n            Delete\n          </Button>\n        </Action>\n      </Header>\n      <Content>\n        <Table>\n          <thead>\n            <tr>\n              <th>\n                <input\n                  type='checkbox'\n                  defaultChecked={allChecked}\n                  onClick={onCheckAll}\n                />\n              </th>\n              <th></th>\n              <th>ステータス</th>\n              <th>作成者</th>\n              <th>作成日付</th>\n              <th>更新日付</th>\n            </tr>\n          </thead>\n          <tbody>\n            {list.length ? (\n              list.map((item) => {\n                return (\n                  <IssueItem\n                    key={item.id}\n                    issue={item}\n                    checked={checked[item.id]}\n                    onClick={onEdit}\n                    onCheck={onCheck}\n                  />\n                );\n              })\n            ) : (\n              <></>\n            )}\n            {!list.length && (\n              <tr>\n                <td colSpan='6'>データがありません</td>\n              </tr>\n            )}\n          </tbody>\n        </Table>\n      </Content>\n    </Container>\n  );\n};\n\nIssue.propTypes = {\n  data: PropTypes.object,\n  user: PropTypes.object,\n  showModal: PropTypes.func,\n  removeModal: PropTypes.func,\n  addIssue: PropTypes.func,\n  removeIssue: PropTypes.func,\n  updateIssue: PropTypes.func,\n};\n\nexport default Issue;\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Issue from '../components/templates/Issue';\nimport { actionCreators } from '../actions';\n\nconst mapStateToProps = ({ user, issue }) => {\n  return {\n    data: issue.data,\n    user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(actionCreators, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Issue);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  text-align: center;\n  margin-top: 180px;\n  font-size: 18px;\n  white-space: nowrap;\n`;\n\nconst PullRequest = () => {\n  return (\n    <Container>\n      <h1>Pull Request</h1>\n    </Container>\n  );\n};\n\nexport default PullRequest;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { colors } from '../../styles/variable';\n\nconst Container = styled.div``;\n\nconst Tabs = styled.ul`\n  display: flex;\n  padding: 0;\n  li {\n    list-style: none;\n  }\n  span {\n    cursor: pointer;\n    color: ${colors.weakBlack};\n    padding: 16px;\n    display: block;\n    width: 100%;\n  }\n`;\n\nconst borderStyle = `1px solid ${colors.border}`;\n\nconst Tab = styled.li`\n  font-size: 14px;\n  width: 100%;\n  text-align: center;\n  border-radius: 6px 6px 0px 0px;\n  border-top: ${({ active }) => (!active ? '' : borderStyle)};\n  border-right: ${({ active }) => (!active ? '' : borderStyle)};\n  border-left: ${({ active }) => (!active ? '' : borderStyle)};\n  border-bottom: ${({ active }) => (active ? '' : borderStyle)};\n`;\n\nconst TabHeader = ({ tabs, selected, onChange }) => {\n  return (\n    <Container>\n      <Tabs>\n        {tabs.map(({ key, to, label }) => {\n          const active = key === selected;\n          const onClick = () => onChange(key);\n          return (\n            <Tab active={active} key={key}>\n              <span onClick={onClick}>{label}</span>\n            </Tab>\n          );\n        })}\n      </Tabs>\n    </Container>\n  );\n};\n\nTabHeader.propTypes = {\n  tabs: PropTypes.array,\n  selected: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default TabHeader;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Issue from '../containers/Issue';\nimport PullRequestTab from '../components/templates/PullRequest';\nimport TabHeader from '../components/organisms/TabHeader';\n\nconst tabs = [\n  {\n    key: 'issue',\n    label: 'Issue',\n  },\n  {\n    key: 'pull-requests',\n    label: 'Pull Request',\n  },\n];\n\nconst Container = styled.div``;\nconst Content = styled.div``;\n\nconst Tabs = [\n  {\n    key: 'issue',\n    component: <Issue />,\n  },\n  {\n    key: 'pull-requests',\n    component: <PullRequestTab />,\n  },\n];\n\nconst Index = () => {\n  const [selected, setSelected] = useState('issue');\n  return (\n    <Container>\n      <Content>\n        <TabHeader selected={selected} onChange={setSelected} tabs={tabs} />\n        {Tabs.map((item) => (selected === item.key ? item.component : <></>))}\n      </Content>\n    </Container>\n  );\n};\n\nexport default Index;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.div`\n  padding: 16px;\n  margin: auto;\n`;\n\nconst borderStyle = `1px solid rgb(225, 228, 232)`;\n\nconst Title = styled.h1``;\n\nconst Content = styled.div`\n  margin: 32px 0;\n  display: flex;\n  border-radius: 6px;\n  border: ${borderStyle};\n`;\n\nconst Left = styled.div`\n  padding: 16px;\n  width: 50%;\n`;\nconst Right = styled.div`\n  padding: 16px;\n  width: 50%;\n`;\n\nconst Group = styled.div``;\n\nconst Label = styled.label`\n  color: black;\n`;\n\nconst Field = styled.p`\n  padding: 16px 0;\n  font-size: 1.2rem;\n`;\n\nconst Profile = ({ user }) => {\n  return (\n    <Container>\n      <Title>Profile</Title>\n      <Content>\n        <Left>\n          <Group>\n            <Label>プロフィール</Label>\n            <Field>\n              <img src={user.profileUrl} alt='プロフィール' />\n            </Field>\n          </Group>\n        </Left>\n        <Right>\n          <Group>\n            <Label>ユーザ名</Label>\n            <Field>{user.name}</Field>\n          </Group>\n          <Group>\n            <Label>メールアドレス</Label>\n            <Field>{user.email}</Field>\n          </Group>\n        </Right>\n      </Content>\n    </Container>\n  );\n};\n\nProfile.propTypes = {\n  user: PropTypes.object,\n};\n\nexport default Profile;\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Profile from '../pages/Profile';\nimport { actionCreators } from '../actions';\n\nconst mapStateToProps = ({ user }) => {\n  return {\n    user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(actionCreators, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n","import React from 'react';\nimport styled from 'styled-components';\nimport Issue from '../containers/Issue';\n\nconst Container = styled.div`\n  padding: 16px;\n`;\n\nconst Profile = () => {\n  return (\n    <Container>\n      <Issue />\n    </Container>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PullRequest from '../components/templates/PullRequest';\n\nconst Container = styled.div`\n  padding: 16px;\n  h1 {\n    text-align: center;\n  }\n`;\n\nconst Profile = () => {\n  return (\n    <Container>\n      <PullRequest />\n    </Container>\n  );\n};\n\nexport default Profile;\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { colors } from '../../styles/variable';\n\nconst Container = styled.div`\n  cursor: pointer;\n`;\n\nconst Menu = styled.ul`\n  position: absolute;\n  right: 20px;\n  width: 200px;\n  border-radius: 3px;\n  padding: 0px;\n  background: white;\n  box-shadow: 1px 1px 4px 1px #33333326;\n  border: none;\n  list-style: none;\n  color: ${colors.black};\n  background: white;\n  outline: none;\n  li {\n    padding: 10px 10px;\n    font-size: 12px;\n    cursor: pointer;\n    color: black;\n  }\n  li:hover {\n    background: rgb(3, 102, 214);\n    opacity: 0.8;\n    color: white;\n  }\n  a {\n    text-decoration: none;\n  a:hover {\n    color: white;\n  }\n  \n`;\n\nconst DropDown = () => {\n  const [isOpenMenu, setIsOpenMenu] = React.useState(false);\n  const menuRef = React.useRef();\n\n  useEffect(() => {\n    isOpenMenu && menuRef.current.focus();\n  }, [isOpenMenu]);\n\n  const onClick = () => {\n    setIsOpenMenu(!isOpenMenu);\n    if (isOpenMenu) {\n      menuRef.current.focus();\n    }\n  };\n\n  return (\n    <Container>\n      <FontAwesomeIcon icon={faBars} onClick={onClick} />\n      {isOpenMenu && (\n        <Menu\n          onBlur={() => setTimeout(() => setIsOpenMenu(false), 200)}\n          ref={menuRef}\n          tabIndex={0}\n        >\n          <Link to='/'>\n            <li>Top</li>\n          </Link>\n          <Link to='/profile'>\n            <li>Profile</li>\n          </Link>\n          <Link to='/issue'>\n            <li>Issue</li>\n          </Link>\n          <Link to='/pull-request'>\n            <li>Pull Request</li>\n          </Link>\n        </Menu>\n      )}\n    </Container>\n  );\n};\n\nexport default DropDown;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport DropDown from './DropDown';\nimport { colors } from '../../styles/variable';\n\nconst size = {\n  mobile: '576px',\n};\n\nconst device = {\n  mobile: `(max-width: ${size.mobile})`,\n};\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  height: 75px;\n  background: ${colors.black};\n  color: white;\n`;\n\nconst Logo = styled.div`\n  white-space: nowrap;\n  letter-spacing: -1px;\n  font-size: 13px;\n  margin-top: 7px;\n  margin-left: 20px;\n  cursor: pointer;\n  text-decoration: none;\n  a {\n    color: white;\n  }\n`;\n\nconst Links = styled.ul`\n  white-space: nowrap;\n  letter-spacing: -1px;\n  list-style: none;\n  display: flex;\n  margin: 32px 0 32px 10px;\n  font-size: 14px;\n  font-weight: bolder;\n  li {\n    margin: 0 10px;\n    cursor: pointer;\n  }\n  a {\n    color: white;\n  }\n  @media ${device.mobile} {\n    display: none;\n  }\n`;\n\nconst Menu = styled.div`\n  font-size: 16px;\n  margin: 27px 30px 40px auto;\n`;\n\nconst Header = () => {\n  return (\n    <Container>\n      <Logo>\n        <h1>\n          <Link to='/'>Github Viewer</Link>\n        </h1>\n      </Logo>\n      <Links>\n        <li>\n          <Link to='/issue'>Issue</Link>\n        </li>\n\n        <li>\n          <Link to='/pull-request'>Pull Request</Link>\n        </li>\n      </Links>\n      <Menu>\n        <DropDown />\n      </Menu>\n    </Container>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from 'react-modal';\n\nModal.setAppElement('#root');\n\nconst ModalContainer = ({ show, component }) => {\n  if (!show) {\n    return <></>;\n  }\n  return <Modal isOpen={show}>{component}</Modal>;\n};\n\nModalContainer.propTypes = {\n  show: PropTypes.bool,\n  component: PropTypes.object,\n};\n\nexport default ModalContainer;\n","import { connect } from 'react-redux';\nimport Modal from '../components/organisms/Modal';\n\nconst mapStateToProps = ({ ui: { modal } }) => {\n  return {\n    show: modal.show,\n    component: modal.stack.slice(-1)[0],\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\n","import { createGlobalStyle } from 'styled-components';\nimport { colors } from './variable';\n\nconst size = {\n  mobile: '576',\n  tablet: '768',\n  laptop: '1200px',\n  desktop: '2560px',\n};\n\nexport const device = {\n  mobile: `(max-width: ${size.mobile})`,\n  tablet: `(max-width: ${size.tablet})`,\n  laptop: `(max-width: ${size.laptop})`,\n  desktop: `(max-width: ${size.desktop})`,\n};\n\nexport const GlobalStyle = createGlobalStyle`\n    html {\n        font-family: 'Lato', 'Lucida Grande', 'Lucida Sans Unicode', Tahoma, Sans-Serif;\n        padding: 0;\n        margin: 0;\n    }\n\n    body {\n        margin: 0;\n        padding: 0;\n    }\n\n    *, *:before, *:after {\n        box-sizing: border-box;\n    }\n\n    ul, p {\n        padding: 0;\n        margin: 0;\n    }\n\n    li {\n        list-style-type: none;\n    }\n\n    a {\n        color: ${colors.link};\n        text-decoration: none;\n    }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Index from './pages/Index';\nimport Profile from './containers/Profile';\nimport Issue from './pages/Issue';\nimport PullRequest from './pages/PullRequest';\nimport Header from './components/organisms/Header';\nimport Modal from './containers/Modal';\nimport { GlobalStyle } from './styles';\n\nconst Container = styled.div``;\n\nconst Content = styled.div`\n  max-width: 896px;\n  margin: 0 auto;\n  padding: 32px 16px;\n`;\n\nconst App = () => {\n  return (\n    <Router basename='/redux-github-viewer'>\n      <GlobalStyle />\n      <Container>\n        <Header />\n        <Content>\n          <Switch>\n            <Route path='/profile'>\n              <Profile />\n            </Route>\n            <Route path='/issue'>\n              <Issue />\n            </Route>\n            <Route path='/pull-request'>\n              <PullRequest />\n            </Route>\n            <Route exact path='/'>\n              <Index />\n            </Route>\n          </Switch>\n        </Content>\n        <Modal />\n      </Container>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport saga from './sagas';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from './reducers';\nimport App from './App';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(saga);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}